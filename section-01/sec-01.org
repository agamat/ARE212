#+AUTHOR:     
#+TITLE:      
#+OPTIONS:     toc:nil num:nil 
#+LATEX_HEADER: \usepackage{mathrsfs}
#+LATEX_HEADER: \usepackage{graphicx}
#+LATEX_HEADER: \usepackage{hyperref}
#+LATEX_HEADER: \usepackage{booktabs}
#+LATEX_HEADER: \usepackage{dcolumn}
#+LATEX_HEADER: \usepackage{subfigure}
#+LATEX_HEADER: \usepackage[margin=1in]{geometry}
#+LATEX_HEADER: \RequirePackage{fancyvrb}
#+LATEX_HEADER: \DefineVerbatimEnvironment{verbatim}{Verbatim}{fontsize=\small,formatcom = {\color[rgb]{0.1,0.2,0.9}}}
#+LATEX: \newcommand{\ep}{{\bf e}^\prime}
#+LATEX: \renewcommand{\e}{{\bf e}}
#+LATEX: \renewcommand{\I}{{\bf I}}
#+LATEX: \renewcommand{\X}{{\bf X}}
#+LATEX: \renewcommand{\x}{{\bf x}}
#+LATEX: \renewcommand{\M}{{\bf M}}
#+LATEX: \renewcommand{\A}{{\bf A}}
#+LATEX: \renewcommand{\P}{{\bf P}}
#+LATEX: \renewcommand{\Xp}{{\bf X}^{\prime}}
#+LATEX: \renewcommand{\Mp}{{\bf M}^{\prime}}
#+LATEX: \renewcommand{\y}{{\bf y}}
#+LATEX: \renewcommand{\yp}{{\bf y}^{\prime}}
#+LATEX: \renewcommand{\yh}{\hat{{\bf y}}}
#+LATEX: \renewcommand{\yhp}{\hat{{\bf y}}^{\prime}}
#+LATEX: \renewcommand{\In}{{\bf I}_n}
#+LATEX: \renewcommand{\email}[1]{\textcolor{blue}{\texttt{#1}}}
#+LATEX: \renewcommand{\id}[1]{{\bf I}_{#1}}
#+LATEX: \newcommand{\myheader}[1]{\textcolor{black}{\textbf{#1}}}
#+LATEX: \setlength{\parindent}{0in}
#+STARTUP: fninline

*Preliminaries and setup* \hfill
*ARE212*: Section 01 \\ \\

The objective of this section is to review the syllabus and the =R=
environment.  With remaining time, I will introduce the Github
repository for these sections, submit basic code puzzles, and make a
shameless pitch for the [[www.ecohack.org][\email{ecohack.org}]] conference.\\

*Download \texttt{R}*: The download of =R= will vary by
operating system, but it will begin here in any event:\\

[[http://cran.r-project.org/][\email{cran.r-project.org}]] \\

The online documentation and installer routines are comprehensive.  If
you are new to =R=, then it might make sense to use the Mac or Windows
distribution, along with the built-in editor to write and evaluate
code. For the tech-oriented, the Linux distribution is very flexible;
and I'd use [[http://www.gnu.org/software/emacs/][Emacs]] with the [[http://ess.r-project.org/][ESS]] package for editing.  If you are
interested in using the Linux distribution and are having trouble with
the setup, please see me.\\

In order to download specific packages that are not bundled with the
base distribution of =R=, such as the =foreign= package, you'll enter
the following commands to install and load the package:

#+begin_src R :results none :exports code :tangle yes
  install.packages("foreign")
  library(foreign)
#+end_src

Once =foreign= is loaded, you'll have access to all of its constituent
functions, including =read.dta= which will convert a Stata data file
into an =R= data frame.\\

*Github repo*: I will primarily use bSpace to disseminate the
section notes.  You don't need to know anything about Github to
productively and successfully engage in this section.  The final
version of the notes will be posted at least one week before section
as a PDF on Blackboard.  That said, if you want to review an advanced,
rough copy of the notes, you can browse the Github repo for this
section, and the address is found in the syllabus.  Github is an
immensely useful collaborative coding site.  You will find a full
revision history of the code and notes; and if you see any problems,
you can submit a patch.  This will provide a gentle but useful
introduction to the type of open source project that is common in the
Bay Area tech industry.  Many of the facilities developed for
collaborative coding are incredibly valuable for joint research
projects.\\

*Linear algebra puzzles*: These notes will provide a code illustration
 of the Linear Algebra review in Chapter 1 of the lecture notes.
 Don't worry if you can't solve these puzzles.  Come back to them
 later, once we have gone over =R= code in more detail.  There are
 many correct ways to solve these puzzles.  We will go over a few
 solutions in section.

 1. Let $\id{5}$ be a $5 \times 5$ identity matrix.  Demonstrate that
    $\id{5}$ is symmetric and idempotent using simple functions in
    =R=.

 2. Generate a $2 \times 2$ idempotent matrix $\X$, where $\X$ is not
    the identity matrix.  Demonstrate that $\X = \X\X$.

 3. Generate two random variables, $\x$ and $\e$, of dimension $n =
    100$ such that $\x, \e \sim N(0,1)$.  Generate a random
    variable $\y$ according to the data generating process $y_i =
    x_i + e_i$.  Show that if you regress $\y$ on $\x$ using the
    canned linear regression routine =lm()=, then you will get an
    estimate of the intercept $\beta_0$ and the coefficient on $\x$,
    $\beta_1$, such that $\beta_0 = 0$ and $\beta_1 = 1$.

 4. Show that if $\lambda_1, \lambda_2, \ldots, \lambda_5$ are the
    eigenvectors of a $5 \times 5$ matrix $\A$, then $\mbox{tr}(\A) =
    \sum_{i=1}^5 \lambda_i$.

#+begin_src R :results graphics output :exports none :tangle yes
  install.packages("foreign")
  
  I <- diag(5)
  print(I)
  print(I %*% I)
  
  all(I == I %*% I)
  all(I == t(I))
  
  X <- matrix(c(1,1,0,0), 2)
  all(X == X %*% X)
  
  n <- 100
  x <- rnorm(n)
  e <- rnorm(n)
  y <- x + e
  
  lm(y ~ x)
  
  A <- matrix(runif(25), 5)
  lambda <- eigen(A)$values
  print( sum(diag(A)) )
  print( sum(lambda) )
  
  
#+end_src

#+results:
#+begin_example
     [,1] [,2] [,3] [,4] [,5]
[1,]    1    0    0    0    0
[2,]    0    1    0    0    0
[3,]    0    0    1    0    0
[4,]    0    0    0    1    0
[5,]    0    0    0    0    1
     [,1] [,2] [,3] [,4] [,5]
[1,]    1    0    0    0    0
[2,]    0    1    0    0    0
[3,]    0    0    1    0    0
[4,]    0    0    0    1    0
[5,]    0    0    0    0    1
[1] TRUE
[1] TRUE
[1] TRUE
 
Call:
lm(formula = y ~ x)

Coefficients:
(Intercept)            x  
  -0.007228     0.946083
[1] 2.830659
[1] 2.830659+0i
#+end_example

